name: vmeste-app workflow

on: [push]

jobs:
  # tests:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.9

  #   - name: Install dependencies
  #     run: | 
  #       python -m pip install --upgrade pip 
  #       pip install flake8 pep8-naming flake8-broken-line flake8-return
  #       pip install -r play_board/requirements.txt

  #   - name: Test with flake8
  #     run: |
  #       python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: github.ref == 'test'
    # needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub 
        uses: docker/build-push-action@v2 
        with:
          push: true
          context: ./play_board/
          tags: ${{ secrets.DOCKER_USERNAME }}/vmeste_back:latest 
  
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'test'
    steps:
      - uses: actions/checkout@v3
      - name: copy docker-compose, nginx files via ssh
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.TEST_HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          password: ${{ secrets.PASSPHRASE }}
          source: "infra-vmeste/*"
          target: "vmeste/"
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TEST_HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          password: ${{ secrets.PASSPHRASE }}
          script: |
            cd vmeste/infra-vmeste/
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} > .env
            echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} >> .env
            echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
            echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
            echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
            echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
            echo SOCIAL_AUTH_VK_OAUTH2_KEY=${{ secrets.SOCIAL_AUTH_VK_OAUTH2_KEY }} >> .env
            echo SOCIAL_AUTH_VK_OAUTH2_SECRET=${{ secrets.SOCIAL_AUTH_VK_OAUTH2_SECRET }} >> .env
            echo SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_KEY }} >> .env
            echo SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET }} >> .env

            sudo docker-compose stop
            sudo docker rm vmeste-back
            sudo docker rm vmeste-nginx
            sudo docker volume rm infra-vmeste_static_value
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/vmeste_back
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/vmeste_back:latest
            sudo docker-compose up -d --build
            sudo docker exec -it vmeste-back python manage.py collectstatic --no-input
            sudo docker exec -it vmeste-back python manage.py migrate
            sudo docker exec -d vmeste-back python manage.py start_bot